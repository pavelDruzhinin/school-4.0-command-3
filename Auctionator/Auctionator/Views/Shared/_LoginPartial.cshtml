@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="navbar-right">
        <ul class="nav navbar-nav">
           
            <li class="nav-item dropdown">
                <a class="nav-link dropdown-toggle text-primary" href="#" id="navbarDropdown" role="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    @UserManager.GetUserName(User)
                </a>
                <div class="dropdown-menu" aria-labelledby="navbarDropdown">
                    <a class='nav-link' asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">@UserManager.GetUserName(User)</a>
                    <a class="dropdown-item" href="#">@(new Microsoft.AspNetCore.Html.HtmlString("Личные данные"))</a>
                    <a class="dropdown-item" href="#">Мои товары</a>
                    <a class="dropdown-item" href="#">Мои аукционы</a>
                    <a class="dropdown-item" href="#">Корзина</a>
                    <a class="dropdown-item" href="#">Выход</a>
                </div>
            </li>
            <li class="nav-item">
                <button type="submit" class="btn btn-link navbar-btn navbar-link">Logout</button>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav">
        <li class="nav-item"><a class='nav-link' asp-area="Identity" asp-page="/Account/Register">Register</a></li>
        <li class="nav-item"><a class='nav-link' asp-area="Identity" asp-page="/Account/Login">Login</a></li>
    </ul>
}